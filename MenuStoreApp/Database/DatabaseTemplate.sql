CREATE DATABASE Project_Inv

USE Project_Inv


CREATE TABLE CUSTOMERS(

	CUSTOMER_ID INT IDENTITY(1,1) PRIMARY KEY,
	customerNAME VARCHAR(50) NOT NULL,
	customerADDRESS VARCHAR(200),
	cellNUMBER char(11),
	EmailADDRESS varchar(50)

)
CREATE TABLE POSITION (

	POSITION_ID INT IDENTITY(1,1) PRIMARY KEY,
	positionNAME VARCHAR(100) NOT NULL,
	

)
CREATE TABLE PayMETHOD(

	PAYMENT_ID INT IDENTITY(1,1) PRIMARY KEY,
	payTYPE VARCHAR(20) NOT NULL

)
CREATE TABLE STATUS(

	STATUS_ID INT IDENTITY(1,1) PRIMARY KEY,
	statusTYPE VARCHAR(20) NOT NULL

)
CREATE TABLE CONSIGNORS(

	CONSIGNOR_ID INT IDENTITY(1,1) PRIMARY KEY,
	ConstgnorNAME VARCHAR(100),
	ConstgnorADDRESS VARCHAR(150),
	cellNUMBER char(11),
	EmailADDRESS varchar(50) NOT NULL

)
CREATE TABLE EMPLOYEE (

	EMPLOYEE_ID INT IDENTITY(1,1) PRIMARY KEY,
	employeeNAME VARCHAR(50),
	employeeGENDER VARCHAR(20),
	employeeADDRESS varchar(100),
	cellNUMBER char(11),
	EmailADDRESS varchar(50) NOT NULL,
	employeePASSWORD varchar(50) NOT NULL,	
	DATE_HIRED DATE,
	SALARYperMonth SMALLMONEY,
	POSITION_ID INT FOREIGN KEY REFERENCES POSITION(POSITION_ID)

)
CREATE TABLE INVENTORY (

	INVENTORY_ID INT IDENTITY(1,1) PRIMARY KEY,
	SHELF_NUMBER INT,
	CONSIGNOR_ID INT FOREIGN KEY REFERENCES CONSIGNORS(CONSIGNOR_ID),
	SKU VARCHAR(20),
	productNAME VARCHAR(100),
	UNIT VARCHAR(20),
	PRICE INT,
	OnHAND_QTY INT,
	THRESHOLD INT,
	STATUS_ID INT FOREIGN KEY REFERENCES STATUS(STATUS_ID)

)

CREATE TABLE SALES (

	SALES_ID INT NOT NULL PRIMARY KEY,
	INVENTORY_ID INT FOREIGN KEY REFERENCES INVENTORY(INVENTORY_ID),
	SALES_DATETIME DATETIME,
	QUANTITY INT,
	CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMERS(CUSTOMER_ID),
	EMPLOYEE_ID INT FOREIGN KEY REFERENCES EMPLOYEE(EMPLOYEE_ID),
	PAYMENT_ID INT FOREIGN KEY REFERENCES PayMETHOD(PAYMENT_ID),
	paidAMOUNT SMALLMONEY

)
CREATE TABLE FINANCES(

	SALES_ID INT FOREIGN KEY REFERENCES SALES(SALES_ID),
	CONSIGNOR_ID INT FOREIGN KEY REFERENCES CONSIGNORS(CONSIGNOR_ID),
	SOLD SMALLMONEY,
	cosignorSALES SMALLMONEY,
	cutSALES SMALLMONEY

)

INSERT INTO CUSTOMERS(

	customerNAME

)
VALUES(

	'Walk In'

);

INSERT INTO STATUS(

	statusTYPE

)
VALUES(

	'New'

);

INSERT INTO STATUS(

	statusTYPE

)
VALUES(

	'Used'

);

INSERT INTO STATUS(

	statusTYPE

)
VALUES(

	'Sold Out'

);

INSERT INTO STATUS(

	statusTYPE

)
VALUES(

	'Pulled Out'

);

INSERT INTO PayMETHOD(

	payTYPE

)
VALUES(

	'Cash'

);

INSERT INTO PayMETHOD(

	payTYPE

)
VALUES(

	'GCash'

);

INSERT INTO POSITION(

	positionNAME

)
VALUES(

	'Owner'

);

INSERT INTO POSITION(

	positionNAME

)
VALUES(

	'Cashier'

);

INSERT INTO POSITION(

	positionNAME

)
VALUES(

	'Sales'

);

INSERT INTO CONSIGNORS(

	ConstgnorNAME,
	EmailADDRESS

)
VALUES(

	'ADMIN',
	'ADMIN'

);

INSERT INTO EMPLOYEE(

	employeeNAME,
	EmailADDRESS,
	employeePASSWORD,	
	POSITION_ID

)
VALUES(

	'ADMIN',
	'ADMIN',
	'ADMIN',
	1

);

INSERT INTO SALES(SALES_ID)
VALUES(1);





----_______________________________________----STOP HERE 
--TESTING SITE

ALTER TABLE INVENTORY
ADD CONSIGNOR_ID INT FOREIGN KEY REFERENCES CONSIGNORS(CONSIGNOR_ID)

--SP_RENAME POSTION, POSITION



UPDATE STATUS
SET statusTYPE = 'New'
WHERE  = 2 



SELECT MAX(SALES_ID)
FROM SALES

INSERT INTO INVENTORY(
	CONSIGNOR_ID,
	SKU,
	productNAME,
	SKU,
	UNIT,
	PRICE,
	OnHAND_QTY,
	THRESHOLD,
	STATUS_ID
)
VALUES(
'DUM1',
'DUM2'
);

Select *
FROM EMPLOYEE

Select *
FROM POSITION

Select *
FROM INVENTORY

Select *
FROM CONSIGNORS

Select *
FROM CUSTOMERS

Select *
FROM PayMETHOD

Select *
FROM SALES

Select *
FROM STATUS

Select *
FROM FINANCES

--DROP DATABASE Project_Inv

DELETE
FROM EMPLOYEE
WHERE EMPLOYEE_ID

--DELETE
--FROM POSTION

DELETE
FROM INVENTORY

--DELETE
--FROM CONSIGNORS

DELETE
FROM CUSTOMERS

DELETE
FROM SALES

DELETE
FROM FINANCES
